name: Deploy `dev` By Comment

on:
  issue_comment:
    types:
      - created

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: write

env:
  tf-dir: terraform/environment/dev

jobs:
  apply:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/deploy')
    environment: dev
    timeout-minutes: 25
    steps:
      - id: get-branch
        uses: actions/github-script@v8
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const pull_request = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            return pull_request.data.head.ref
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.get-branch.outputs.result }}
      - uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.DEPLOY_ROLE_ARN }}
          aws-region: 'ap-northeast-1'
      - uses: hashicorp/setup-terraform@v3
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm build
      - id: tf-init
        run: terraform -chdir=${{ env.tf-dir }} init
      - id: tf-apply
        run: terraform -chdir=${{ env.tf-dir }} apply -auto-approve -no-color
        timeout-minutes: 20
        env:
          TF_VAR_twitter_api_key: ${{ secrets.TWITTER_API_KEY }}
          TF_VAR_twitter_api_secret: ${{ secrets.TWITTER_API_SECRET }}
          TF_VAR_twitter_access_token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TF_VAR_twitter_access_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      - uses: actions/github-script@v8
        if: success() || failure()
        env:
          APPLY: "${{ steps.tf-apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Apply ðŸ“¦ \`${{ steps.tf-apply.outcome }}\`

            <details><summary>Show Apply</summary>

            \`\`\`terraform
            ${process.env.APPLY}
            \`\`\`

            </details>`;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: output
            })
